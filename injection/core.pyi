from typing import Any, Callable, Iterable, TypeVar, overload

_T = TypeVar("_T")

def get_instance(reference: type[_T]) -> _T: ...
def inject(wrapped: Callable[..., Any] = ..., /): ...
def injectable(*, reference: type = ..., auto_inject: bool = ...): ...
@overload
def injectable(*, references: Iterable[type] = ..., auto_inject: bool = ...): ...
def singleton(*, reference: type = ..., auto_inject: bool = ...): ...
@overload
def singleton(*, references: Iterable[type] = ..., auto_inject: bool = ...): ...
